.map_body {
    background: url(../../images/bg.jpg) no-repeat;
    background-size: 100% 100%;     /*解决缩放问题*/

}
.map {
    position: relative;
    height: 10.125rem;
}
.map .map1 {
    width: 6.475rem;
    height: 6.475rem;
    /*盒子定位  中心点*/
    /*生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。
    元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。*/
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: url(../../images/map.png);
    background-size: 100% 100%;     /*解决缩放问题*/
    opacity: 0.3;   /*透明度*/
}
.map .map2 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 8.0375rem;
    height: 8.0375rem;
    background: url(../../images/lbx.png);
    animation: rotate1 15s linear infinite;
    opacity: 0.6;
    background-size: 100% 100%;
}
.map .map3 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 7.075rem;
    height: 7.075rem;
    background: url(../../images/jt.png);
    animation: rotate2 10s linear infinite;
    opacity: 0.6;
    background-size: 100% 100%;
}
.map .chart {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 10.125rem;
}
@keyframes rotate1 {
    form {
        transform: translate(-50%, -50%) rotate(0deg);
    }
    to {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}
@keyframes rotate2 {
    form {
        transform: translate(-50%, -50%) rotate(0deg);
    }
    to {
        transform: translate(-50%, -50%) rotate(-360deg);
    }
}
/* 约束屏幕尺寸 */
@media screen and (max-width: 1024px) {
    html {
        font-size: 42px !important;
    }
}
@media screen and (min-width: 1920px) {
    html {
        font-size: 80px !important;
    }
}
